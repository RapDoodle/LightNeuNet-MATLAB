classdef Dense < Layer
    %DENSE Summary of this class goes here
    %   Detailed explanation goes here
    
    properties
        units
        use_bias
        
        next_layer = 0
        prev_layer = 0
        
        kernel_initializer
        activation
        
        Z
        dZ
        
        W
        dW
        
        b
        db
    end
    
    methods
        function dense = Dense(units, activation, use_bias, kernel_initializer)
            %DENSE Construct an instance of this class
            %   Detailed explanation goes here
            dense.type = LayerType.HiddenLayer
            dense.units = units;
            dense.activation = activation;
            dense.use_bias = use_bias;
            dense.kernel_initializer = kernel_initializer;
        end
        
        function dense = init(dense, prev_layer)
            %METHOD1 Summary of this method goes here
            %   Detailed explanation goes here
            if ~isa(dense.prev_layer, 'Layer')
                throw(MException('Dense:noPreviousLayer', ...
                    'A previous layer must be defined for a Dense layer'));
            end
            
            dense.b = zeros(units, 1);
            
            if strcmp(self.kernel_initializer, 'uniform')
                dense.W = -1 + rand(units, prev_layer.units) * 2
            
            elseif strcmp(self.kernel_initializer, 'uniform')
                
            
            elseif
        end
    end
end

